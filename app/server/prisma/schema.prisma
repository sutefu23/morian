datasource db {
  provider = "mysql"
  url      = env("API_DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

model Task {
  id    Int     @id @default(autoincrement())
  label String
  done  Boolean @default(false)
}

model Issue {
  id                  Int           @id @default(autoincrement())
  managedId           String //管理ID
  date                DateTime
  user                User          @relation(name: "issueUser", fields: [userId], references: [id])
  userId              Int
  userName            String
  supplierId          Int
  supplierName        String
  supplier            Supplier      @relation(name: "issueSupplier", fields: [supplierId], references: [id])
  supplierManagerName String
  expectDeliveryDate  String
  deliveryPlace       DeliveryPlace @relation(name: "issueDeliveryPlace", fields: [deliveryPlaceId], references: [id])
  deliveryPlaceId     Int
  deliveryPlaceName   String
  deliveryAddress     String
  receiveingStaff     String
  issueNote           String //発注備考
  innerNote           String // 内部備考
  issueItems          IssueItem[]
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model IssueItem {
  id               Int      @id @default(autoincrement())
  Issue            Issue    @relation(fields: [IssueId], references: [id], onDelete: Cascade)
  IssueId          Int
  itemType         ItemType @relation(name: "issueItemItemType", fields: [itemTypeId], references: [id]) // 分類
  itemTypeId       Int
  itemTypeName     String
  woodSpecies      Species? @relation(name: "issueItemWoodSpecies", fields: [woodSpeciesId], references: [id]) // 樹種
  woodSpeciesId    Int?
  woodSpeciesName  String?
  spec             String? //仕様
  manufacturer     String? // 製造元
  grade            Grade?   @relation(name: "issueItemGrade", fields: [gradeId], references: [id]) // グレード
  gradeId          Int?
  gradeName        String?
  length           String? // 寸法（長さ）
  width            Int? // 寸法（幅）
  thickness        Int? // 寸法（厚）
  packageCount     Decimal // 入数
  costPackageCount Decimal // 原価単位数量
  count            Decimal // 数量
  unit             Unit     @relation(name: "issueItemUnit", fields: [unitId], references: [id]) // 単位
  unitId           Int
  unitName         String
  cost             Decimal // 原価
  costUnit         Unit     @relation(name: "issueItemCostUnit", fields: [costUnitId], references: [id]) // 原価単位
  costUnitId       Int
  costUnitName     String
  itemNote         String?
  isStored         Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

// ユーザー
model User {
  id          Int       @id
  name        String    @unique
  UserPass    UserPass?
  editHistory History[] @relation("editUser")
  bookHistory History[] @relation("bookUser")
  issue       Issue[]   @relation("issueUser")
  item        Item[]    @relation("itemUser")
  enable      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// ユーザーログイン
model UserPass {
  id     Int    @id @default(autoincrement())
  pass   String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

// 在庫
model Item {
  id                  Int       @id @default(autoincrement())
  issueItemId         Int? //発注ItemID
  lotNo               String    @unique // ロット番号
  itemType            ItemType  @relation(fields: [itemTypeId], references: [id]) // 分類
  itemTypeId          Int
  itemTypeName        String    @default("")
  woodSpecies         Species?  @relation(fields: [woodSpeciesId], references: [id]) // 樹種
  woodSpeciesId       Int?
  woodSpeciesName     String?
  user                User      @relation(name: "itemUser", fields: [userId], references: [id])
  userId              Int       @default(0)
  userName            String    @default("")
  spec                String? //仕様
  grade               Grade?    @relation(fields: [gradeId], references: [id]) // グレード
  gradeId             Int?
  gradeName           String?
  length              String? // 寸法（長さ）
  width               Int? // 寸法（幅）
  thickness           Int? // 寸法（厚）
  packageCount        Decimal? // 入数
  costPackageCount    Decimal? // 原価単位数量
  count               Decimal // 在庫数量
  tempCount           Decimal // 仮想在庫数量
  unit                Unit      @relation(name: "unit", fields: [unitId], references: [id]) // 単位
  unitId              Int
  unitName            String    @default("")
  supplier            Supplier? @relation(fields: [supplierId], references: [id])
  supplierId          Int?
  supplierName        String?
  supplierManagerName String    @default("")
  history             History[]
  arrivalDate         DateTime // 入荷日
  warehouse           Warehouse @relation(fields: [warehouseId], references: [id]) // 倉庫
  warehouseId         Int // 倉庫
  warehouseName       String    @default("")
  cost                Decimal? // 原価
  costUnit            Unit?     @relation(name: "costUnit", fields: [costUnitId], references: [id]) // 原価単位
  costUnitId          Int?
  costUnitName        String?   @default("")
  note                String? // 備考
  manufacturer        String? // 製造元
  defectiveNote       String? //不良品備考
  enable              Boolean   @default(true)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model Unit {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  order         Int
  item          Item[]      @relation("unit")
  itemCost      Item[]      @relation("costUnit")
  issueItem     IssueItem[] @relation("issueItemUnit")
  issueItemCost IssueItem[] @relation("issueItemCostUnit")
}

model Supplier {
  id         Int     @id @default(autoincrement())
  name       String  @unique
  furigana   String
  zip        String?
  prefecture String?
  address    String?
  tel        String?
  fax        String?
  enable     Boolean @default(true)
  item       Item[]
  issue      Issue[] @relation("issueSupplier")
}

model ItemType {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  prefix    String      @unique
  order     Int
  item      Item[]
  issueItem IssueItem[] @relation("issueItemItemType")
}

model Species {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  order     Int
  item      Item[]
  issueItem IssueItem[] @relation("issueItemWoodSpecies")
}

model Warehouse {
  id    Int    @id @default(autoincrement())
  name  String @unique
  order Int
  item  Item[]
}

model DeliveryPlace {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  address String
  order   Int
  issue   Issue[] @relation("issueDeliveryPlace")
}

model Grade {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  order     Int
  item      Item[]
  issueItem IssueItem[] @relation("issueItemGrade")
}

model History {
  id           Int       @id @default(autoincrement())
  note         String? //備考
  date         DateTime
  reasonId     Int
  reason       Reason    @relation(fields: [reasonId], references: [id]) //理由
  item         Item      @relation(fields: [itemId], references: [id])
  itemId       Int
  status       Int
  isTemp       Boolean
  reduceCount  Decimal //出荷数
  addCount     Decimal //入荷数
  editUser     User      @relation(name: "editUser", fields: [editUserId], references: [id])
  editUserId   Int
  editUserName String    @default("")
  order        Int //並び順
  bookUser     User?     @relation(name: "bookUser", fields: [bookUserId], references: [id])
  bookUserId   Int?
  bookUserName String?
  bookDate     DateTime?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Reason {
  id      Int       @id
  name    String
  status  Int //ステータス
  order   Int       @unique
  history History[]
}
